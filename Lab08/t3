#define MAXLINESIZE 256

int main()
{
  int length, size, inputNum1, inputNum2;
  int fileDes[2]; // Reading and writing file descriptors for both processes
  pid_t pid;
  char setLine[MAXLINESIZE], readLine[MAXLINESIZE];

  if (pipe(fileDes) < 0)
  {
    printf("ERROR: Pipe error\n");
    exit(1);
  }

  if ((pid = fork()) < 0) // Error
  {
    printf("ERROR: Fork failed\n");
    exit(1);
  }
  else if (pid > 0) // Parent Process
  {
    close(fileDes[0]); // Close the input pipe for the parent process

    printf("Enter two integers: ");

    while ((size = read(STDIN_FILENO, setLine, MAXLINESIZE)) > 0)
    {
      write(fileDes[1], setLine, size);

      printf("Enter two more integers: ");
    }
  }
  else // Child Process
  {
    close(fileDes[1];

    while ((length = read(fileDes[0], readLine, MAXLINESIZE)) > 0)
    {
      if (sscanf(readLine, "%d%d", &inputNum1, &inputNum2) == 2) // Get the 2 numbers from the String passed by parent
      {
        sprintf(readLine, "The product is %d\n", inputNum1 * inputNum2); // Print the product of the two numbers

        length = strlen(readLine);

        if (write(STDOUT_FILENO, readLine, length) != length)
        {
          printf("ERROR: Writing to standard output error");
          exit(1);
        }
      }
      else // The string passed did not contain exactly 2 integers
      {
        if (write(STDOUT_FILENO, "Invalid input! You must enter two integers.\n", 45) != 45)
        {
          printf("ERROR: Writing to standard output error");
          exit(1);
        }
      }
    }
  }
  return 0;
}
